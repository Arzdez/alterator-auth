#!/bin/sh

#common part
po_domain="alterator-auth"
ldap_uri_re='^(ldap|ldapi|ldaps)://[.a-zA-Z0-9_-]+$'
rdelim='[[:space:]]\+'
wdelim=' '

#pam configuration
pamldapfile="/etc/pam_ldap.conf"

#nss configuration
nssldapfile=
nssldapfile1="/etc/nss_ldap.conf"
nssldapfile2="/etc/nss-ldapd.conf"
nsswitchfile="/etc/nsswitch.conf"

# proxyuser part
ldap_proxyuser_enable="enable"
ldap_proxyuser_pass_file="/etc/openldap/proxyuser.pass"

#select between nss_ldap and nss_ldapd
[ -f "$nssldapfile1" ] && nssldapfile="$nssldapfile1"
[ -f "$nssldapfile2" ] && nssldapfile="$nssldapfile2"

. alterator-sh-functions
. shell-config

#turn off auto expansion
set -f

list_profile()
{
    write_enum_item "local" "`_ "Local files"`"
    [ -n "$(find /$(getconf SLIB)/security -name 'pam_ldap.*')" ] &&
	[ -n "$(find /$(getconf SLIB) -name 'libnss_ldap.so.*')" ] &&
	write_enum_item "ldap" "`_ "LDAP"`"
}

read_profile()
{
    /usr/sbin/control system-auth
}

write_nsswitch()
{
    shell_config_set "$nsswitchfile" "$1:" "$2" "$rdelim" "$wdelim"
}

write_profile()
{
    /usr/sbin/control system-auth "$1" &&
    case "$1" in
	local)
	    write_nsswitch "passwd" "files"
	    write_nsswitch "shadow" "tcb files"
	    write_nsswitch "group" "files"
	    ;;
	ldap)
	    write_nsswitch "passwd" "files ldap"
	    write_nsswitch "shadow" "tcb files ldap"
	    write_nsswitch "group" "files ldap"
	    ;;
    esac
}

read_ldap()
{
    shell_config_get "$1" "$2" "$rdelim"
}

write_ldap()
{
    shell_config_set "$1" "$2" "$3" "$rdelim" "$wdelim"
}

#syncronyous config change
read_ldap2()
{
    read_ldap "$pamldapfile" "$1"
}

write_ldap2()
{
    write_ldap "$pamldapfile" "$1" "$2" && write_ldap "$nssldapfile" "$1" "$2"
}

del_ldap()
{
    shell_config_del "$1" "$2" "$rdelim"
}

del_ldap2()
{
    del_ldap "$pamldapfile" "$1" && del_ldap "$nssldapfile" "$1"
}

#initial settings
del_ldap2 host
[ ! -s "$nssldapfile1" ] || write_ldap "$nssldapfile1" bind_policy soft
[ ! -s "$nssldapfile1" ] || write_ldap "$nssldapfile1" bind_timelimit 30

on_message()
{
	case "$in_action" in
	    type)
		echo '('
		write_type_item ldap_host hostname
		write_type_item ldap_port tcp-port
		echo ')'
		;;
	    list)
		echo '('
		[ "$in__objects" = "avail_profile" ] && list_profile
		echo ')'
		;;
	    read)
		echo '('

		write_string_param profile "$(read_profile)"

		local ldap_uri="$(read_ldap2 uri)"

		local ldap_proto="${ldap_uri%%://*}"
		local ldap_host="${ldap_uri#$ldap_proto://}"
		local ldap_port="${ldap_host##*:}"

		ldap_host="${ldap_host%%:*}"
		[ "$ldap_port" != "$ldap_host" ] || ldap_port=

		write_string_param ldap_host "$ldap_host"
		write_string_param ldap_port "$ldap_port"

		[ "$ldap_proto" != "ldaps" ]
		write_bool_param ldap_ssl "$?"

		write_string_param ldap_basedn "$(read_ldap2 base)"
		echo ')'
		;;
	    write)
		if [ -n "$in_ldap_host" ];then
		    local uri="ldap://"
		    test_bool "$in_ldap_ssl" && uri="ldaps://"

		    uri="$uri$in_ldap_host"
		    [ -n "$in_ldap_port" ] && uri="$uri:$in_ldap_port"

		    write_ldap2 uri "$uri"
		fi

		[ -n "$in_profile" ] && write_profile "$in_profile" 
		
		if [ -n "$in_ldap_basedn" ]; then
			write_ldap2 base "$in_ldap_basedn"
			if [ -n "$ldap_proxyuser_enable" -a -f "$ldap_proxyuser_pass_file" ]; then
				local proxyuser_pass = $(read_proxyuser_pass "$ldap_proxyuser_pass_file")
				local binddn = "cn=proxyuser,$in_ldap_basedn"
				write_ldap2 binddn "$binddn"
				write_ldap2 bindpw "$proxyuser_pass"
			fi

		fi
	        write_nop
		;;
	    *)
		echo '#f'
		;;
	esac
}

message_loop
